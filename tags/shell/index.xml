<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Shell on Yuto's notes</title><link>https://example.org/tags/shell/</link><description>Recent content in Shell on Yuto's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2023 © [Yuto](https://joeroe.io)</copyright><lastBuildDate>Mon, 26 Sep 2022 17:30:41 +0000</lastBuildDate><atom:link href="https://example.org/tags/shell/index.xml" rel="self" type="application/rss+xml"/><item><title>Lecture 1:Course Overview + The Shell</title><link>https://example.org/posts/csie/missing-semester/missing-semester-01/</link><pubDate>Mon, 26 Sep 2022 17:30:41 +0000</pubDate><guid>https://example.org/posts/csie/missing-semester/missing-semester-01/</guid><description>MIT的教授們所開設的課程。每堂課都有線上筆記可以參考。
The Shell 當你打開Shell，統常只會有一行字在做上方，稱作系統提示(Shell Prompt)。
[root@localhost] $ 上面有使用者名稱(user name)跟現在使用的機器名稱還有現在所在的路徑(path)。你可以在系統提示輸入指令Shell會解析指令，例如最簡單的指令便是執行一個程式且帶有引數(argument):
date Tue Sep 27 08:40:51 CST 2022 以date這隻程式來說，他會把現在的日期跟時間印在shell上。 那當然也可以使用帶有引數的程式:
echo hello hello</description></item><item><title>Before the Course</title><link>https://example.org/posts/csie/missing-semester/missing-semester-00/</link><pubDate>Mon, 26 Sep 2022 17:29:58 +0000</pubDate><guid>https://example.org/posts/csie/missing-semester/missing-semester-00/</guid><description>課程裡面所使用的環境都是類UNIX系統。如果你是Windows系統的話就要用WSL來模擬LINUX的環境，而且可能會有很多東西跟教授所講的不太一樣。接下來會用Windows 11操作。
:::warning Windows 10 版本必須是 2004 (19041.450) 以上 :::
Windows Terminal 一個可以讓你Terminal漂漂亮亮的東西 Microsoft Store的連結
Windows 功能 直接去搜尋打上Windows 功能並點開 把裡面的Windows 子系統 Linux 版跟虛擬機平台勾起來 開啟WindowsTerminal(Power Shell或命令提示字元都可以)
wsl --install 著作權 (c) Microsoft Corporation。保留擁有權利。 使用方式: wsl.exe [Argument] [Options...] [CommandLine] 用於執行 Linux 二進位檔的引數: 如果未提供任何命令列，wsl.exe 會啟動預設的殼層。 --exec, -e &amp;lt;CommandLine&amp;gt; 執行指定的命令，但不使用預設的 Linux 殼層。 -- 依原樣傳遞剩餘的命令列。 選項: --cd &amp;lt;Directory&amp;gt; 將指定的目錄設定為目前的工作目錄。 如果使用 ~，將會使用 Linux 使用者的主目錄路徑。如果該路徑的開頭 為 / 字元，將會解譯為絕對 Linux 路徑。 否則，該值必須是絕對 Windows 路徑。 --distribution, -d &amp;lt;Distro&amp;gt; 執行指定的發佈。 --user, -u &amp;lt;UserName&amp;gt; 以指定使用者的身分執行。 --system 啟動系統發佈的殼層。 用於管理 Windows 子系統 Linux 版的引數: --help 顯示使用資訊。 --install [Options] 安裝其他 Windows 子系統 Linux 版發佈。 如需有效發佈的清單，請使用 &amp;#39;wsl --list --online&amp;#39;。 選項: --distribution, -d [Argument] 依名稱下載並安裝發佈。 引數: 有效發佈名稱 (不區分大小寫)。 範例: wsl --install -d Ubuntu wsl --install --distribution Debian --set-default-version &amp;lt;Version&amp;gt; 針對新發佈變更預設安裝版本。 --shutdown 立即終止所有執行中的發佈和 WSL 2 輕量公用程式虛擬機器。 --status 顯示 Windows 子系統 Linux 版狀態。 --update [Options] 如果未指定選項，則會更新 WSL 2 核心 至最新版本。 選項: --rollback 還原至舊版 WSL 2 核心。 在 Windows 子系統 Linux 版中用於管理發佈的引數: --export &amp;lt;Distro&amp;gt; &amp;lt;FileName&amp;gt; 將發佈匯出為 tar 檔案。 檔案名稱可以是 - 以用於標準輸出。 --import &amp;lt;Distro&amp;gt; &amp;lt;InstallLocation&amp;gt; &amp;lt;FileName&amp;gt; [Options] 匯入指定的 tar 檔案作為新發佈。 檔案名稱可以是 - 以用於標準輸入。 選項: --version &amp;lt;Version&amp;gt; 指定要用於新發佈的版本。 --list, -l [Options] 列出發佈。 選項: --all 列出全部發佈，包含 正在安裝或解除安裝的發佈。 --running 只列出目前正在執行的發佈。 --quiet, -q 只顯示發佈名稱。 --verbose, -v 顯示所有發佈的詳細資訊。 --online, -o 顯示可用發佈的清單，以使用 &amp;#39;wsl --install&amp;#39; 安裝。 --set-default, -s &amp;lt;Distro&amp;gt; 將發佈設定為預設值。 --set-version &amp;lt;Distro&amp;gt; &amp;lt;Version&amp;gt; 變更所指定發佈的版本。 --terminate, -t &amp;lt;Distro&amp;gt; 終止指定的發佈。 --unregister &amp;lt;Distro&amp;gt; 取消登錄發佈並刪除根檔案系統。 --mount &amp;lt;Disk&amp;gt; 在所有 WSL2 發佈中連結並裝載實體磁碟。 選項: --bare 將磁碟連結到 WSL2，但不要裝載磁碟。 --type &amp;lt;Type&amp;gt; 裝載磁碟時要使用的檔案系統，若未指定，預設為 ext4。 --options &amp;lt;Options&amp;gt; 其他裝載選項。 --partition &amp;lt;Index&amp;gt; 要裝載之磁碟分割的索引，若未指定，預設為整個磁碟。 --unmount [Disk] 從所有 WSL2 發佈卸載並中斷連結磁碟。 若在沒有引數的情況下呼叫，即卸載並中斷連結所有磁碟。 可以用參數-l -o把所有發行版都印出來</description></item></channel></rss>