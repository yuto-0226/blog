<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>vector on Yuto's notes</title><link>https://example.org/tags/vector/</link><description>Recent content in vector on Yuto's notes</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>2023 © [Yuto](https://joeroe.io)</copyright><lastBuildDate>Wed, 05 Jan 2022 20:24:37 +0000</lastBuildDate><atom:link href="https://example.org/tags/vector/index.xml" rel="self" type="application/rss+xml"/><item><title>向量 Vector(STL)</title><link>https://example.org/posts/csie/c++/cpp-vector/</link><pubDate>Wed, 05 Jan 2022 20:24:37 +0000</pubDate><guid>https://example.org/posts/csie/c++/cpp-vector/</guid><description>前言 在學寫C++的過程當中，從 Array 到 Vector 一直是很難跨越的障礙， 因為我的物件導向和指標不是學的很完善，導致會有點看不懂程式碼在做什麼， 所以這次我透過邊實作邊學習的方式來盡量彌補我知識上的不足， 順便做個筆記來記錄。
簡介 Vector 是 C++ 標準程式庫中的一個 class，可視為會自動擴展容量的陣列， 是C++標準程式庫中的眾多容器(container)之一，以循序(Sequential)的方式維護變數集合， 使用前預先 #include &amp;lt;vector&amp;gt; 即可。
特色 支援隨機存取 集合尾端增刪元素很快 : 常數時間 O(1) 集合中間增刪元素比較費時 : 線性時間 O(n) 以模板(泛型)方式實現，可以儲存任意類型的變數，包括使用者自定義的資料型態。 成員函式 vector 類別是以容器(Container)模式為基準設計的，也就是說，基本上它有 begin()、end()、size()、max_size()、empty() 以及 swap() 這幾個方法。
存取元素的方法 v[i] : 存取索引值為 i 的元素值 (索引值從零起算，故第一個元素是v[0]。) v.at(i) : 存取索引值為 i 的元素的值 v.front() : 回傳 vector 第一個元素的值 v.back() : 回傳 vector 最尾端元素的值 用 operator [] 可能會 Segmentation Fault。以 at() 存取會做陣列邊界檢查，如果存取越界將會拋出一個例外，這是與 operator [] 的唯一差異。撰寫較嚴肅、安全性較高的程式時使用 at()。</description></item></channel></rss>